{"version":3,"sources":["../../../../src/basic/Tabs/DefaultTabBar.js"],"names":["ReactNative","require","StyleSheet","View","Animated","Platform","ViewPropTypes","Button","DefaultTabBar","propTypes","goToPage","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","tabStyle","style","renderTab","underlineStyle","contextTypes","theme","object","getDefaultProps","topTabBarActiveTextColor","topTabBarTextColor","renderTabOption","name","page","isTabActive","onPressHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","headerContent","props","children","undefined","textColor","fontWeight","flex","random","render","variables","context","platformStyle","containerWidth","numberOfTabs","length","tabUnderlineStyle","position","width","height","topTabBarActiveBorderColor","bottom","left","scrollValue","interpolate","inputRange","outputRange","map","StyledTab","mapPropsToStyleNames"],"mappings":"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","file":"DefaultTabBar.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport createReactClass from \"create-react-class\";\nconst ReactNative = require(\"react-native\");\nimport { connectStyle, StyleProvider } from \"native-base-shoutem-theme\";\nimport variable from \"./../../theme/variables/platform\";\nimport { TabHeading, Text, TabContainer } from \"./../../index\";\nimport _ from \"lodash\";\n\nconst { StyleSheet, View, Animated, Platform, ViewPropTypes } = ReactNative;\nconst Button = require(\"./Button\");\n\nconst DefaultTabBar = createReactClass({\n\tpropTypes: {\n\t\tgoToPage: PropTypes.func,\n\t\tactiveTab: PropTypes.number,\n\t\ttabs: PropTypes.array,\n\t\tbackgroundColor: PropTypes.string,\n\t\tactiveTextColor: PropTypes.string,\n\t\tinactiveTextColor: PropTypes.string,\n\t\ttabStyle: ViewPropTypes.style,\n\t\trenderTab: PropTypes.func,\n\t\tunderlineStyle: ViewPropTypes.style,\n\t},\n\tcontextTypes: {\n\t\ttheme: PropTypes.object,\n\t},\n\n\tgetDefaultProps() {\n\t\treturn {\n\t\t\tactiveTextColor: variable.topTabBarActiveTextColor,\n\t\t\tinactiveTextColor: variable.topTabBarTextColor,\n\t\t\tbackgroundColor: null,\n\t\t};\n\t},\n\n\trenderTabOption(name, page) {},\n\n\trenderTab(\n\t\tname,\n\t\tpage,\n\t\tisTabActive,\n\t\tonPressHandler,\n\t\ttabStyle,\n\t\tactiveTabStyle,\n\t\ttextStyle,\n\t\tactiveTextStyle,\n\t\ttabHeaderStyle\n\t) {\n\t\tconst headerContent = typeof name !== \"string\" ? name.props.children : undefined;\n\t\tconst { activeTextColor, inactiveTextColor } = this.props;\n\t\tconst textColor = isTabActive ? activeTextColor : inactiveTextColor;\n\t\tconst fontWeight = isTabActive ? \"bold\" : \"normal\";\n\t\tif (typeof name === \"string\") {\n\t\t\treturn (\n\t\t\t\t<Button style={{ flex: 1 }} key={name} onPress={() => onPressHandler(page)}>\n\t\t\t\t\t<TabHeading style={isTabActive ? activeTabStyle : tabStyle} active={isTabActive}>\n\t\t\t\t\t\t<Text style={isTabActive ? activeTextStyle : textStyle}>\n\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</TabHeading>\n\t\t\t\t</Button>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Button style={{ flex: 1 }} key={_.random(1.2, 5.2)} onPress={() => onPressHandler(page)}>\n\t\t\t\t\t<TabHeading style={tabHeaderStyle} active={isTabActive}>\n\t\t\t\t\t\t{headerContent}\n\t\t\t\t\t</TabHeading>\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\t},\n\n\trender() {\n\t\tconst variables = this.context.theme ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables : variable;\n\t\tconst platformStyle = variables.platformStyle;\n\t\tconst containerWidth = this.props.containerWidth;\n\t\tconst numberOfTabs = this.props.tabs.length;\n\t\tconst tabUnderlineStyle = {\n\t\t\tposition: \"absolute\",\n\t\t\twidth: containerWidth / numberOfTabs,\n\t\t\theight: 4,\n\t\t\tbackgroundColor: variables.topTabBarActiveBorderColor,\n\t\t\tbottom: 0,\n\t\t};\n\n\t\tconst left = this.props.scrollValue.interpolate({\n\t\t\tinputRange: [0, 1],\n\t\t\toutputRange: [0, containerWidth / numberOfTabs],\n\t\t});\n\t\treturn (\n\t\t\t<TabContainer>\n\t\t\t\t{this.props.tabs.map((name, page) => {\n\t\t\t\t\tconst isTabActive = this.props.activeTab === page;\n\t\t\t\t\tconst renderTab = this.props.renderTab || this.renderTab;\n\t\t\t\t\treturn renderTab(\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tpage,\n\t\t\t\t\t\tisTabActive,\n\t\t\t\t\t\tthis.props.goToPage,\n\t\t\t\t\t\tthis.props.tabStyle[page],\n\t\t\t\t\t\tthis.props.activeTabStyle[page],\n\t\t\t\t\t\tthis.props.textStyle[page],\n\t\t\t\t\t\tthis.props.activeTextStyle[page],\n\t\t\t\t\t\tthis.props.tabHeaderStyle[page]\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t<Animated.View style={[tabUnderlineStyle, { left }, this.props.underlineStyle]} />\n\t\t\t</TabContainer>\n\t\t);\n\t},\n});\n\n// module.exports = DefaultTabBar;\nconst StyledTab = connectStyle(\"NativeBase.DefaultTabBar\", {}, mapPropsToStyleNames)(DefaultTabBar);\nexport { StyledTab as DefaultTabBar };\n"]}